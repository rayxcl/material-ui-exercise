{"version":3,"file":"app.js","sources":["webpack:///./src/components/Exercises/Form.js"],"sourcesContent":["import React, { Component } from 'react';\nimport {\n  TextField,\n  FormControl,\n  InputLabel,\n  Select,\n  MenuItem,\n  Button\n} from '@material-ui/core';\n\n// import { withStyles } from '@material-ui/core/styles';\n\n/* const styles = theme => ({\n  root: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  formControl: {\n    // margin: theme.spacing.unit,\n    // minWidth: 120,\n    width: 300,\n  },\n  selectEmpty: {\n    marginTop: theme.spacing.unit * 2,\n  },\n}); */\n\nexport default class extends Component {\n  state = this.getInitState()\n\n  getInitState() {\n    const { exercise } = this.props;\n\n    // console.log('getInitSate ()');\n    // console.log(exercise);\n    return exercise || {\n      title: '',\n      description: '',\n      muscles: '',\n    };\n  }\n\n  /* static getDerivedStateFromProps({ exercise }) {\n    return exercise || null;\n  } */\n  static getDerivedStateFromProps(nextProps, prevState) {\n    // console.log(`next: ${nextProps.exercise.title}`);\n    // console.log(`prev: ${prevState.title}`);\n    // if (!nextProps.exercise) return null;\n\n    if (nextProps.exercise && nextProps.exercise.id !== prevState.id) {\n      return nextProps.exercise;\n    }\n\n    // console.log('getDerivedStateFromProps ()');\n    // console.log(nextProps.exercise);\n    return null;\n    // return nextProps.exercise || null;\n\n    // return {\n    //   title: nextProps.title,\n    //   description: nextProps.description,\n    //   muscles: nextProps.muscles,\n    // };\n    //     if (nextProps.value !== prevState.value) {\n    //   return { exercise: nextProps.exercise };\n    // }\n    // return null; // null 을 리턴하면 따로 업데이트 할 것은 없다라는 의미\n  }\n\n  handleChange = e => {\n    // console.log(e.target.name);\n    // this.setState(state => ({\n    //   exercise: {\n    //     ...state.exercise,\n    //     [e.target.name]: e.target.value,\n    //   },\n    // }));\n    // console.log(`[${e.target.name}]: ${e.target.value}`);\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  }\n\n  handleSubmit = () => {\n    this.props.onSubmit({\n      id: this.state.title.toLocaleLowerCase().replace(/ /g, '-'),\n      ...this.state\n    });\n    // console.log(this.state);\n    // console.log(this.getInitState());\n\n    // this.setState(this.getInitState());\n    // this.setState(this.state);\n  }\n\n  render() {\n    const { muscles: categories, exercise } = this.props;\n    const { title, description, muscles } = this.state;\n\n    return (\n      <form>\n        <TextField\n          label=\"Title\"\n          value={title}\n          name=\"title\"\n          onChange={this.handleChange}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n        <FormControl fullWidth>\n          <InputLabel htmlFor=\"muscles\">Muscles</InputLabel>\n          <Select\n            name=\"muscles\"\n            value={muscles}\n            onChange={this.handleChange}\n          >\n            {categories.map(category => (\n              <MenuItem\n                key={category}\n                value={category}\n              >\n                {category}\n              </MenuItem>\n            ))}\n          </Select>\n        </FormControl>\n        <br />\n        <TextField\n          multiline\n          rows=\"4\"\n          label=\"Description\"\n          value={description}\n          name=\"description\"\n          onChange={this.handleChange}\n          margin=\"normal\"\n          fullWidth\n        />\n        <br />\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={this.handleSubmit}\n          disabled={!title || !muscles}\n        >\n          {exercise ? 'Edit' : 'Create'}\n        </Button>\n      </form>\n    );\n  }\n}\n"],"mappings":"AA2BA","sourceRoot":""}